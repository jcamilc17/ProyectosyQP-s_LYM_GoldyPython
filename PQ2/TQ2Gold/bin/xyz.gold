using gold.**
// -----------------------
// Silvia Takahashi
// UNIVERSIDAD DE LOS ANDES
//------------------------------
// 
//  
// An automaton that recognizes strings that start and end with the same three letter word.
//  Where the three letters are different
//  it should accept a single three letter word as long as all letters are different
//-----------------------
//   By default  the alphabet is  = {'a', 't', 'c'}, it can be changed invoking the program with a string  of symbols. 
//   A  will contain all the the symbols in the string
//  
//  

var  A  

procedure main(args:String[]) begin
 	    
 	  
  
	if  args.length=0  then  A:= { 'a', 'c', 't'}
	else	
		A := {args[0].charAt(i) |  0 ≤ i < args[0].length()}\{'$'}
    end
	GAutomataFrame.show(createFA())
	test(createFA())
end




function createFA():IAutomaton begin
	Ls := A
	M0 := {""}
	M1 := {""+a|a∈Ls}
	M2 := {""+a+b| a∈Ls,b∈Ls\{a}}
	M3 := {""+a+b+c|a∈Ls,b∈Ls\{a},c∈Ls\{b,a}}
	Q:=  {⟨s⟩|s∈M1∪ M2∪M3∪M0} ∪ {⟨s,d⟩|s∈M3, 0 ≤d≤ 2}∪{"E"}
	print Q
	
	Σ:= A
	q₀:=⟨""⟩
	F:={⟨s⟩|s∈M3}
	return GDeterministicAutomaton(Q,Σ,q₀,F,δ)
end

procedure test(M:IAutomaton) begin
	var sc:java.util.Scanner(System.$in)
	while true do
		print "----------------------------"
		print "Input a string of: "+A
		string:=sc.nextLine()
		result:=M.acceptsString(string)
		print "The string was"+(result?" ":"  not ")+ "accepted"
	end
end

function δ(q,σ) begin
    var s:String
	if q = "E" then
		return "E"
   elseif |q| = 1 then
      s:= q[0]
   	  if s.length()  = 0 then
        return   	⟨""+σ⟩
      elseif s.length()  = 1 and σ≠s.charAt(0)  then
        return   	⟨""+s+σ⟩
      elseif s.length()  = 2 and σ≠s.charAt(0) and σ≠s.charAt(1) then
        return   	⟨""+s+σ⟩
      elseif s.length() = 3  and s.charAt(2)= σ  then
   	      return   	⟨s,1⟩
   	  elseif s.length() = 3  and s.charAt(1)= σ  then
   	      return   	⟨s,2⟩
      elseif s.length() = 3    then
   	      return   	⟨s,0⟩
		else return "E"
   	   end
   	else // |q| = 2
   	  s,p:= q[0],q[1]
   	  if p=0 and σ=s.charAt(2) then return ⟨s,1⟩
   	  elseif p=0  then return ⟨s,0⟩
   	  elseif p=1 and  σ=s.charAt(2) then return ⟨s,1⟩
   	  elseif p=1 and  σ=s.charAt(1) then return ⟨s,2⟩
   	  elseif p=1  then return ⟨s,0⟩
   	  elseif p=2 and  σ=s.charAt(2) then return ⟨s,1⟩
   	  elseif p=2 and  σ=s.charAt(0) then return ⟨s⟩
   	  else return	⟨s,0⟩
   	  end
end
end

