// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Example2.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Example2 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=4;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,Example2.createAutomaton()));
      $line=5;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,Example2.createAutomaton()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Example2.class,"main",$line);
    }
  }
  public static Object getName() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      $result="Contador M\u00F3dulo 3";
      if (true) break $try;
      $line=9;
      $rethrow(new RuntimeException("The function \"getName()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Example2.class,"getName",$line);
    }
    return $result;
  }
  public static IAutomaton createAutomaton() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=20;
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int(3)-1;
      $v2:for (int i=$v3; i<=$v4; i++) {
        $v1.add(i);
      }
      Object Q=$fix($opUnionY($opUnionY($opCartsY(new Object[]{$opIntvlY(0,1),$v1,$opIntvlY(0,1)}),GCollections.asSet(0,1)),GCollections.asSet('e')));
      $line=21;
      Object \u03A3=$fix(GCollections.asSet('a','b','c','0','1','e'));
      $line=22;
      Object q_0=$fix(GCollections.asList(0,1,0));
      $line=23;
      Object F=$fix(GCollections.asSet(1));
      $line=25;
      $result=$invokeConstructor(GDeterministicAutomaton.class,new Object[]{Q,\u03A3,q_0,F,new GMethod(Example2.class,"\u03B4")});
      if (true) break $try;
      $line=26;
      $rethrow(new RuntimeException("The function \"createAutomaton()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Example2.class,"createAutomaton",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
  public static Object \u03B4(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=28;
      if ($opEqualY(q,1)) {
        $line=28;
        $result='e';
        if (true) break $try;
      }
      else {
        $line=29;
        if ($opEqualY(q,'e')) {
          $line=29;
          $result='e';
          if (true) break $try;
        }
        else {
          $line=30;
          $result=q;
          if (true) break $try;
        }
      }
      $line=32;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Example2.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v5, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v6=GCollections.unmodifiableCollection($v5).iterator();
      Object a=$v6.next();
      Object pos=$v6.next();
      Object b=$v6.next();
      $line=35;
      if ($opEqualY(s,'a')) {
        $line=35;
        $result=GCollections.asList($opModulY($opAdditY(a,1),2),$opModulY($opAdditY(pos,1),3),b);
        if (true) break $try;
      }
      else {
        $line=36;
        if (($opEqualY(s,'c')&&!$opEqualY(pos,0))) {
          $line=36;
          $result=GCollections.asList(a,$opModulY($opAdditY(pos,1),3),b);
          if (true) break $try;
        }
        else {
          $line=37;
          if ($opEqualY(s,'b')) {
            $line=37;
            $result=GCollections.asList(a,$opModulY($opAdditY(pos,1),3),$opModulY($opAdditY(b,1),2));
            if (true) break $try;
          }
          else {
            $line=38;
            if (($opEqualY(s,'0')&&$opEqualY(a,b))) {
              $line=38;
              $result=1;
              if (true) break $try;
            }
            else {
              $line=39;
              if (($opEqualY(s,'1')&&!$opEqualY(a,b))) {
                $line=39;
                $result=1;
                if (true) break $try;
              }
              else {
                $line=40;
                $result='e';
                if (true) break $try;
              }
            }
          }
        }
      }
      $line=42;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8a,pos,b\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Example2.class,"\u03B4",$line);
    }
    return $result;
  }
}
