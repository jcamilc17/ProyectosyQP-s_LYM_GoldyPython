// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/xyz.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class xyz {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=23;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=23;
        A=$fix(GCollections.asSet('a','c','t'));
      }
      else {
        $line=25;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        A=$fix($opDiffeY($v1,GCollections.asSet('$')));
      }
      $line=27;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,xyz.createFA()));
      $line=28;
      xyz.test($cast(gold.structures.automaton.IAutomaton.class,xyz.createFA()));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,xyz.class,"main",$line);
    }
  }
  public static IAutomaton createFA() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=35;
      Object Ls=$fix(A);
      $line=36;
      Object M0=$fix(GCollections.asSet(""));
      $line=37;
      gold.structures.set.ISet $v5=$newSet();
      $v6:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        $v5.add($opAdditY("",a));
      }
      Object M1=$fix($v5);
      $line=38;
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          $v7.add($opAdditY($opAdditY("",a),b));
        }
      }
      Object M2=$fix($v7);
      $line=39;
      gold.structures.set.ISet $v9=$newSet();
      $v10:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          for (Object c:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(b,a)))) {
            $v9.add($opAdditY($opAdditY($opAdditY("",a),b),c));
          }
        }
      }
      Object M3=$fix($v9);
      $line=40;
      gold.structures.set.ISet $v11=$newSet();
      $v12:for (Object s:GCollections.unmodifiableCollection($opUnionY($opUnionY($opUnionY(M1,M2),M3),M0))) {
        $v11.add(GCollections.asList(s));
      }
      gold.structures.set.ISet $v13=$newSet();
      $v14:for (Object s:GCollections.unmodifiableCollection(M3)) {
        int $v15=$int(0);
        int $v16=$int(2);
        for (int d=$v15; d<=$v16; d++) {
          $v13.add(GCollections.asList(s,d));
        }
      }
      Object Q=$fix($opUnionY($opUnionY($v11,$v13),GCollections.asSet("E")));
      $line=41;
      System.out.println($message(new Object[]{Q}));
      $line=43;
      Object \u03A3=$fix(A);
      $line=44;
      Object q_0=$fix(GCollections.asList(""));
      $line=45;
      gold.structures.set.ISet $v17=$newSet();
      $v18:for (Object s:GCollections.unmodifiableCollection(M3)) {
        $v17.add(GCollections.asList(s));
      }
      Object F=$fix($v17);
      $line=46;
      $result=$invokeConstructor(GDeterministicAutomaton.class,new Object[]{Q,\u03A3,q_0,F,new GMethod(xyz.class,"\u03B4")});
      if (true) break $try;
      $line=47;
      $rethrow(new RuntimeException("The function \"createFA()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,xyz.class,"createFA",$line);
    }
    return $cast(IAutomaton.class,$result);
  }
  public static Object test(IAutomaton M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=50;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=51;
      while (true) {
        if (!($bool(true))) break;
        $line=52;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=53;
        System.out.println($message(new Object[]{$opAdditY("Input a string of: ",A)}));
        $line=54;
        Object string=$fix(((java.util.Scanner)sc).nextLine());
        $line=55;
        Object result=$fix(((gold.structures.automaton.IAutomaton)M).acceptsString($cast(java.lang.String.class,string)));
        $line=56;
        System.out.println($message(new Object[]{$opAdditY($opAdditY("The string was",(($bool(result))?(" "):("  not "))),"accepted")}));
      }
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,xyz.class,"test",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=61;
      String s=null;
      s=$defaultValue(String.class);
      $line=62;
      if ($opEqualY(q,"E")) {
        $line=63;
        $result="E";
        if (true) break $try;
      }
      else {
        $line=64;
        if ($opEqualY($opAbsolY(q),1)) {
          $line=65;
          s=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
          $line=66;
          if ($opEqualY(((java.lang.String)s).length(),0)) {
            $line=67;
            $result=GCollections.asList($opAdditY("",\u03C3));
            if (true) break $try;
          }
          else {
            $line=68;
            if (($opEqualY(((java.lang.String)s).length(),1)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
              $line=69;
              $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
              if (true) break $try;
            }
            else {
              $line=70;
              if ((($opEqualY(((java.lang.String)s).length(),2)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                $line=71;
                $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
                if (true) break $try;
              }
              else {
                $line=72;
                if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(((java.lang.String)s).charAt($int(2)),\u03C3))) {
                  $line=73;
                  $result=GCollections.asList(s,1);
                  if (true) break $try;
                }
                else {
                  $line=74;
                  if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(((java.lang.String)s).charAt($int(1)),\u03C3))) {
                    $line=75;
                    $result=GCollections.asList(s,2);
                    if (true) break $try;
                  }
                  else {
                    $line=76;
                    if ($opEqualY(((java.lang.String)s).length(),3)) {
                      $line=77;
                      $result=GCollections.asList(s,0);
                      if (true) break $try;
                    }
                    else {
                      $line=78;
                      $result="E";
                      if (true) break $try;
                    }
                  }
                }
              }
            }
          }
        }
        else {
          $line=81;
          Object $v19=$getArrayValue(q,new Object[]{0});
          Object $v20=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v19));
          Object p=$fix($v20);
          $line=82;
          if (($opEqualY(p,0)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
            $line=82;
            $result=GCollections.asList(s,1);
            if (true) break $try;
          }
          else {
            $line=83;
            if ($opEqualY(p,0)) {
              $line=83;
              $result=GCollections.asList(s,0);
              if (true) break $try;
            }
            else {
              $line=84;
              if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                $line=84;
                $result=GCollections.asList(s,1);
                if (true) break $try;
              }
              else {
                $line=85;
                if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                  $line=85;
                  $result=GCollections.asList(s,2);
                  if (true) break $try;
                }
                else {
                  $line=86;
                  if ($opEqualY(p,1)) {
                    $line=86;
                    $result=GCollections.asList(s,0);
                    if (true) break $try;
                  }
                  else {
                    $line=87;
                    if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                      $line=87;
                      $result=GCollections.asList(s,1);
                      if (true) break $try;
                    }
                    else {
                      $line=88;
                      if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                        $line=88;
                        $result=GCollections.asList(s);
                        if (true) break $try;
                      }
                      else {
                        $line=89;
                        $result=GCollections.asList(s,0);
                        if (true) break $try;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=92;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,xyz.class,"\u03B4",$line);
    }
    return $result;
  }
}
