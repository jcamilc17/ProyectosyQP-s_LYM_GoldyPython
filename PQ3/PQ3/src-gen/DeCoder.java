// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/DeCoder.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class DeCoder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object Alph=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=15;
      Object decoder=$fix(DeCoder.createTransducer(Alph));
      $line=16;
      System.out.println($message(new Object[]{"Input strings of (0..7)"}));
      $line=17;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,decoder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DeCoder.class,"main",$line);
    }
  }
  public static ITransducer createTransducer(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=21;
      Object Q=$fix(GCollections.asSet($opMinusY(1),0,1,2,3,4,5,6,7,"E"));
      $line=22;
      Object \u03A3=$fix($opIntvlY('0','7'));
      $line=23;
      Object O=$fix($opIntvlY('a','c'));
      $line=24;
      Object q_0=$fix($opMinusY(1));
      $line=25;
      Object F=$fix($opDiffeY(Q,GCollections.asSet("E")));
      $line=26;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(DeCoder.class,"\u03B4"),new GMethod(DeCoder.class,"g"),new GMethod(DeCoder.class,"h")});
      if (true) break $try;
      $line=27;
      $rethrow(new RuntimeException("The function \"createTransducer(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DeCoder.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object h(Object x, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=29;
      if ($bool(($opEqualY(x,"E")||$opEqualY(x,$opMinusY(1))))) {
        $line=29;
        $result="";
        if (true) break $try;
      }
      $line=32;
      Object d=$fix($opSubtrY(s,'0'));
      $line=34;
      Object q_3=$fix($opModulY(x,2));
      $line=35;
      Object sobrante=$fix($opQuotnY(x,2));
      $line=36;
      Object q_2=$fix($opModulY(sobrante,2));
      $line=37;
      sobrante=$fix($opQuotnY(sobrante,2));
      $line=38;
      Object q_1=$fix($opModulY(sobrante,2));
      $line=40;
      Object d_3=$fix($opModulY(d,2));
      $line=41;
      sobrante=$fix($opQuotnY(d,2));
      $line=42;
      Object d_2=$fix($opModulY(sobrante,2));
      $line=43;
      sobrante=$fix($opQuotnY(sobrante,2));
      $line=44;
      Object d_1=$fix($opModulY(sobrante,2));
      $line=46;
      if (!$opEqualY(d_1,q_1)) {
        $line=46;
        $result='a';
        if (true) break $try;
      }
      else {
        $line=48;
        if (!$opEqualY(d_2,q_2)) {
          $line=48;
          $result='b';
          if (true) break $try;
        }
        else {
          $line=50;
          if (!$opEqualY(d_3,q_3)) {
            $line=50;
            $result='c';
            if (true) break $try;
          }
          else {
            $line=52;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=58;
      $rethrow(new RuntimeException("The function \"h(x:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DeCoder.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=60;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DeCoder.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=63;
      Object d=$fix($opSubtrY(\u03C3,'0'));
      $line=64;
      if ($opEqualY(q,$opMinusY(1))) {
        $line=64;
        $result=0;
        if (true) break $try;
      }
      $line=67;
      if (($opEqualY(q,0)&&$bool((($opEqualY(d,4)||$opEqualY(d,2))||$opEqualY(d,1))))) {
        $line=67;
        $result=d;
        if (true) break $try;
      }
      else {
        $line=69;
        if (($opEqualY(q,1)&&$bool((($opEqualY(d,5)||$opEqualY(d,3))||$opEqualY(d,0))))) {
          $line=69;
          $result=d;
          if (true) break $try;
        }
        else {
          $line=71;
          if (($opEqualY(q,2)&&$bool((($opEqualY(d,6)||$opEqualY(d,0))||$opEqualY(d,3))))) {
            $line=71;
            $result=d;
            if (true) break $try;
          }
          else {
            $line=73;
            if (($opEqualY(q,3)&&$bool((($opEqualY(d,7)||$opEqualY(d,1))||$opEqualY(d,2))))) {
              $line=73;
              $result=d;
              if (true) break $try;
            }
            else {
              $line=75;
              if (($opEqualY(q,4)&&$bool((($opEqualY(d,0)||$opEqualY(d,6))||$opEqualY(d,5))))) {
                $line=75;
                $result=d;
                if (true) break $try;
              }
              else {
                $line=77;
                if (($opEqualY(q,5)&&$bool((($opEqualY(d,1)||$opEqualY(d,7))||$opEqualY(d,4))))) {
                  $line=77;
                  $result=d;
                  if (true) break $try;
                }
                else {
                  $line=79;
                  if (($opEqualY(q,6)&&$bool((($opEqualY(d,2)||$opEqualY(d,4))||$opEqualY(d,7))))) {
                    $line=79;
                    $result=d;
                    if (true) break $try;
                  }
                  else {
                    $line=81;
                    if (($opEqualY(q,7)&&$bool((($opEqualY(d,3)||$opEqualY(d,5))||$opEqualY(d,6))))) {
                      $line=81;
                      $result=d;
                      if (true) break $try;
                    }
                    else {
                      $line=83;
                      $result="E";
                      if (true) break $try;
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=86;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,DeCoder.class,"\u03B4",$line);
    }
    return $result;
  }
}
