// -----------------------
// Silvia Takahashi
// UNIVERSIDAD DE LOS ANDES
//  Coder - Decoder :)
//   Coder:
// -----------------------

using gold.**

procedure main(args:String[]) begin

    var sc:java.util.Scanner(System.$in)
    coder:=createCoder()
    deCoder:=createDecoder()
    //GAutomataFrame.show(coder)
    //GAutomataFrame.show(deCoder)

    //Utilities.test(coder)
    //Utilities.test(deCoder)

  Utilities.testCodeDecode (coder, deCoder)

end

function createCoder():ITransducer begin
    A = ('a'‥'z')∪{' '}
    B = (0‥4)
    C = (0‥2)
    Q:= {⟨a,b,c,d⟩|a∈A,b∈B,c∈B,d∈C}∪{"I","E"}∪{⟨"F",a,b,c,d⟩|a∈A,b∈B,c∈B,d∈C}
    In := A∪{'.'}
    Out:= ('a'‥'z')∪('0'‥'9')∪{'.',' '}
    q₀:= "I"
    F:= {⟨"F",a,b,c,d⟩|a∈A,b∈B,c∈B,d∈C}

    return GDeterministicTransducer(Q,In,Out,q₀,F,δ,g,h)

end

function δ(q,s) begin

    if q =  "E" then return "E"
    elseif q = "I" and s = ' ' then return "E"
    elseif q = "I" and s in ('a'‥'z') then return ⟨s,1,1,2⟩
    elseif q[0] = "F" then return "E"
    elseif |q| = 4 then

    firstletter = q[0]
    i = q[1]
    len = q[2]
    j = q[3]
    if s = ' ' then
         if firstletter = ' ' then return "E"
         else return ⟨s, i,len, 1⟩
    end
    elseif s = '.' then
        if firstletter = ' ' then return "E"
         else return ⟨"F",firstletter,(i)%5,(len)%5,j⟩
    end
    else
         if firstletter = ' ' then return ⟨s,(i+1)%5,1, (j+1)%3⟩
         else return ⟨firstletter, i,(len+1)%5, (j+1)%3⟩
         end
    end
    else return "E"
end
end

    function h(q,s) begin
         if q = "E" or q = "F" then return λ
         elseif q = "I" and s = " " then return λ
         elseif q = "I" and s in ('a'‥'z') then return s
         elseif |q| = 4 then
             firstletter = q[0]
             i = q[1]
             len = q[2]
             j = q[3]
             if s = ' ' then
                 if firstletter = ' ' then return λ
                 else
                 return firstletter
             end
             elseif s = '.' then return firstletter
             else
                 if firstletter = ' ' then return s
                     else
                          if firstletter = s then return j
                          else return s
                     end
                 end
             end
         else return λ
         end
         end
         
function g(q) begin
      if q≠"I" and q≠"E" then
        if q[0]≠"F" then
             firstletter = q[0]
             i = q[1]
             len = q[2]
             j = q[3]
             if q[0] = ' ' then return (i + len)%5
             else return λ
             end
        elseif q[0]="F" then
             firstletter = q[0]
             i = q[2]
             len = q[3]
             j = q[4]
             return ((i + len)%5)+"."
        else return λ
        end
      else return λ
      end
end

function createDecoder():ITransducer begin
    A = ('a'‥'z')∪{' '}
    B = ('0'‥'4')
    C = (0‥2)
    D = (0‥4)
    E = ('a'‥'z')∪{0}
    Q:= {⟨a,b,c,d,let⟩|a∈A,b∈D,c∈D,d∈C,let∈E}∪{"I","E","F"}
    In :=('a'‥'z')∪B∪{'.'} 
    Out:=A∪{'.',' '}
    q₀:= "I"
    F:= {"F"}

    return GDeterministicTransducer(Q,In,Out,q₀,F,δ1,g1,h1)

end

function δ1(q,s) begin
    if q =  "E" or q = "F" then return "E"
    elseif q = "I" and s in ('a'‥'z') then return ⟨s,1,1,2,0⟩
    elseif |q| = 5 then
         firstletter = q[0]
         i = q[1]
         len = q[2]
         j = q[3]
         count = q[4]
         if firstletter in ('a'‥'z') and s in ('0'‥'2') then
         s := s - '0'
         if s = j then
             return ⟨firstletter,i,(len+1)%5,(j+1)%3,0⟩
             else return "E"
         end
         elseif firstletter in ('a'‥'z') and s in ('a'‥'z') then
             if s = firstletter then return ⟨' ',i,len,(j+1)%3,0⟩
             elseif s ≠ firstletter then return ⟨firstletter, i,(len+1)%5,(j+1)%3,0⟩
             else return "E"
         end
         elseif firstletter = ' ' then
             if s in ('a'‥'z') then return ⟨s,(i+1)%5, 1,2,s⟩
             elseif s in ('0'‥'4') then
                 s := s - '0'
                 if s = (len+i)%5 then return ⟨' ',i,1,1,0⟩
                 else return "E"
         end
    elseif s = '.' then return "F"
    end
    else return "E"
    end
    else return "E"
    end
    end

function h1(q,s) begin
    if q = "E" or q = "F" then return λ
    elseif q = "I" and s in ('a'‥'z') then return s
    elseif |q| = 5 then
         firstletter = q[0]
         i = q[1]
         len = q[2]
         j = q[3]
         if firstletter in ('a'‥'z') and s in ('0'‥'2') then
             s := s - '0'
             if s = j then return firstletter
             else return λ
             end
         elseif firstletter in ('a'‥'z') and s in ('a'‥'z') then
             if s ≠ firstletter then return s
             else return λ
             end
             elseif firstletter = ' ' and s in ('a'‥'z') then return ' '
             elseif firstletter = ' ' and s = '.' then return '.'
             else return λ
             end
         else return λ
         end
end

function g1(q) begin
    if q≠"I" and q≠"E" and q≠"F" then
             let = q[4]
             if let≠0 then return let
             end
    end
return λ
end